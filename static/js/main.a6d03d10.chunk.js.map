{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","ALPHABET","sort","prev","next","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","oldState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAzBD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAczB,OAZIL,IAAaL,EAASW,UACxBF,EAAaG,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,cAAcD,MAGnDT,IAAaL,EAASgB,QACxBP,EAAaG,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKI,OAASH,EAAKG,UAGnDV,GACFE,EAAaS,UAGRT,EAOcU,CAAkBlB,EAAiB,CAAEI,WAAUE,eAEpE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CAAE,WAAYjB,IAAaL,EAASW,WACvEY,QAAS,kBAAMjB,EAAYN,EAASW,WAHtC,iCAQA,wBACEU,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,WAAYjB,IAAaL,EAASgB,SAC1EO,QAAS,kBAAMjB,EAAYN,EAASgB,SAHtC,4BAQA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAaf,IACrDgB,QAAS,kBAAMf,GAAc,SAAAgB,GAAQ,OAAKA,MAH5C,sBAQEjB,GAAcF,IAAaL,EAASI,OACpC,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,GAAc,GAAQF,EAAYN,EAASI,OAJ/C,sBAYJ,6BACE,6BACGK,EAAagB,KAAI,SAAAC,GAAI,OACpB,6BACGA,GADMA,cCjGrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6d03d10.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((prev, next) => prev.localeCompare(next));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((prev, next) => prev.length - next.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(oldState => !oldState)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false); setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}